use ethers::abi::Function;

pub struct DecodeTestcase {
    signature: &'static str,
    calldata: &'static str,
}

const SEAPORT_FULLFILL_ORDER: DecodeTestcase = DecodeTestcase {
    signature: "addSequencerL2BatchFromOrigin(uint256 sequenceNumber,bytes data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)",
    calldata: "0x8f111f3c00000000000000000000000000000000000000000000000000000000000016fb00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000017bef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014ce3f000000000000000000000000000000000000000000000000000000000014cf0b00000000000000000000000000000000000000000000000000000000000000b288ee2038d9137f102613836e42b5fac1c733433d66a4bdfef97dd495bff5dbed1293a46ab6da69c5fab714f92d8b4accd750f2b80e199312118ff156fa9a417a840000000063a206f9010000000000000077107c919c3bc4ee6618239559ebc48a5f25334bb563eb0283df2f9ed6f4c7166919346d74616eb81ec151768e6b6ef55509d82a5e30eecc81981dcc36ce555ba7a06151bf1bd330fca88b4b6e5d057f638367e671b2f2c6909dad10cbe90993380000000000000000000000000000",
};

#[test]
fn test_should_decode_seaport_fulfill() {
    // let fragment = Function::from(SEAPORT_FULLFILL_ORDER.calldata);
}
